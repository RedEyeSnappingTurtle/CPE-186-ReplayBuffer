`timescale 1ns / 1ps
`include "fifo.v"
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 10/23/2019 11:23:39 AM
// Design Name: 
// Module Name: fifo_tb
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module fifo_tb;
reg clk, rst, rd, wr;
wire [3:0] w_addr, r_addr;

wire full, empty;

initial
        $vcdpluson;

initial
       $monitor($time, " rst = %b rd = %b wr = %b w_addr = %b r_addr = %b",  rst, wr, rd, w_addr, r_addr);


fifo g1(.clk(clk), .reset(rst), .wr(wr), .rd(rd), .full(full), .empty(empty), .w_addr(w_addr), .r_addr(r_addr));

initial clk = 0;
always #10 clk = ~clk;

initial begin
    #10 rst = 1;
    #10 rst = 0;
        wr = 1; 
        rd = 0; 

    #50 wr = 0; 
        rd = 1; 

    #30  
        rd = 0; 

    #10 wr = 1; 
        rd = 1; 

    #20 wr = 0; 
        rd = 1; 

    #10 wr = 1; 
        rd = 1; 



       
      #200 $finish;
end       
    

endmodule
